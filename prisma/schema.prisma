// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @map("clerk_id") // Clerk user ID
  email         String    @unique
  imageUrl      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  connectTrees ConnectTree[]

  @@map("users")
}

model ConnectTree {
  id        String   @id @default(cuid())
  username  String   @unique
  userId    String
  title     String?
  bio       String?
  avatar    String?
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  links     Link[]   // Each connecttree can have many links
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("connecttrees")
}

model Link {
  id          String    @id @default(cuid())
  title       String
  url         String
  thumbnail   String?
  clicks      Int       @default(0)
  visible     Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Relation to User
  connectTreeId      String
  connectTree   ConnectTree @relation(fields: [connectTreeId], references: [id], onDelete: Cascade)

  @@map("links")
}
